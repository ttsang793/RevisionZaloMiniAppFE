import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import React from "react";
import Cluster from ".";
import { inlineFullwidthParameters } from "../../../../.storybook/parameters";
var meta = _objectSpread({
  title: "Container/Cluster",
  component: Cluster,
  tags: ["autodocs"],
  argTypes: {}
}, inlineFullwidthParameters);
export default meta;
var Base = {
  args: {
    children: ["#dc1f18", "#34b764", "#fdd949", "#dc1f18", "#34b764", "#fdd949", "#dc1f18", "#34b764", "#fdd949", "#dc1f18", "#34b764", "#fdd949"].map(function (color) {
      return /*#__PURE__*/React.createElement("div", {
        key: color,
        style: {
          backgroundColor: color,
          width: 40,
          height: 40
        }
      });
    }),
    style: {
      width: 240,
      border: "1px solid #006af5"
    }
  }
};
export var Default = {
  name: "Mặc định",
  args: _objectSpread({}, Base.args)
};
export var Centered = {
  name: "Căn giữa",
  args: _objectSpread(_objectSpread({}, Base.args), {}, {
    space: "1rem",
    justify: "center",
    align: "center"
  })
};
export var NoSpace = {
  name: "Không có khoảng cách",
  args: _objectSpread(_objectSpread({}, Base.args), {}, {
    space: "0"
  })
};
export var EndAligned = {
  name: "Căn phải",
  args: _objectSpread(_objectSpread({}, Base.args), {}, {
    space: "1rem",
    justify: "flex-end",
    align: "flex-end"
  })
};