import e from'./../external/@swc/helpers/src/_async_to_generator.mjs.js';import r from"../appEnv/index.js";import o from"../common/notFound.js";import{functionHandler as t}from"../utils/decorator.js";import n from"../common/apis/general/getNetworkType.js";import{__generator as i}from'./../external/tslib/tslib.es6.js';import{NetworkType as s}from"../types/enum.js";function a(e){return c.apply(this,arguments)}function c(){return(c=e((function(a){return i(this,(function(c){return[2,t("getNetworkType",[],[a],e((function(){var e,t;return i(this,(function(i){switch(i.label){case 0:return r.isMp?[4,n()]:[3,2];case 1:return[2,{networkType:i.sent()}];case 2:if(r.isMpWeb){switch(e=navigator.connection||navigator.mozConnection||navigator.webkitConnection,e.effectiveType){case"none":t=s.none;break;case"4g":t=s.wifi;break;case"3g":case"2g":t=s.cellular;break;default:t=s.unknown}return[2,Promise.resolve({networkType:t})]}return[2,Promise.reject(o("getNetworkType",{}))]}}))})))]}))}))).apply(this,arguments)}export{a as getNetworkType};
