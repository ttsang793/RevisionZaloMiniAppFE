import{RESPONSE_CODE as e,MESSAGES as r,IAP_ERROR as o,RESPONSE as n,COMMON_NATIVE_ERROR_CODE as t,ACTION as i}from"../constants.js";import{AppError as a}from"./errorHandler.js";import{convertJumpActionToSDKAction as s}from"./common.js";import u from"../common/token.js";import c from"../appEnv/getEnv.js";import{JumpStatus as m}from"../types/enum.js";var d={success:function(o,n){return{code:e.SUCCESS,message:n||r.SUCCESS,data:o||{}}},error:{failLimit:function(){return new a(e.FAIL_LIMIT,r.FAIL_LIMIT)},badRequest:function(r){return new a(e.BAD_REQUEST,r)},loginFailed:function(o){return new a(e.UNAUTHORIZED,"".concat(r.LOGIN_FAILED,": ").concat(o))},loginRequired:function(){return new a(e.UNAUTHORIZED,r.LOGIN_REQUIRED)},cannotGetShareInfo:function(){return new a(e.INTERNAL_SERVER_ERROR,"Can not get app info to share")},createIAPOrderFailed:function(e){var n=Object.keys(o).find((function(r){return r===e.toString()}));return new a(e,n||r.UNKNOWN_ERROR)},clientNotSupport:function(){return new a(e.CLIENT_NOT_SUPPORT,r.CLIENT_NOT_SUPPORT)}}},l=function(r){var o,d,l,f=null===(o=c())||void 0===o?void 0:o.platformName,R=s(r.action),E=i[R],N=(null==E?void 0:E.skipJump)||!1,_=(null==E?void 0:E.errorList)||{};if("JUMP_LOGIN"===R)return new a(e.UNKNOWN_ERROR,"Can not get auth code: ".concat(r.error_message));if(u.jumpStatus!==m.DONE&&!N)return new a(n.UNAUTHORIZED.code,n.UNAUTHORIZED.message);if("permission required!"===String(r.error_message).toLowerCase()||"no permission!"===String(r.error_message).toLowerCase())return new a(n.FORBIDDEN.code,n.FORBIDDEN.message);if(f&&(null===(d=t[f])||void 0===d?void 0:d[r.error_code]))return new a(t[f][r.error_code].code,t[f][r.error_code].message);var p=null==_||null===(l=_[f])||void 0===l?void 0:l[String(r.error_code)];if(p){var v,I,O,g=null===(v=p.mapTo)||void 0===v?void 0:v.message;if(null==p?void 0:p.needMoreDetail)g="".concat(null==p||null===(O=p.mapTo)||void 0===O?void 0:O.message,": ").concat(r.error_message);return new a(null===(I=p.mapTo)||void 0===I?void 0:I.code,g)}return new a(r.error_code,r.error_message)};export{d as apiResponse,l as convertError};
